#!/usr/bin/env python
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
#                               Alex Dementsov
#                      California Institute of Technology
#                        (C) 2009  All Rights Reserved
#
# {LicenseText}
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#

import os
from luban.content import select
from luban.content import load
from luban.content.Paragraph import Paragraph
from luban.content.Document import Document
from opal.components.Actor import Actor as base

# Variable that should be set in envs.sh
EXPORT_ROOT = os.environ.get('EXPORT_ROOT')

class Actor(base):

    class Inventory(base.Inventory):
        import pyre.inventory
        id      = pyre.inventory.str('id')
        config  = pyre.inventory.str(name="config", default="")

    def default(self, director):
        page = director.retrievePage('template')
        page.maindoc.add(self.content(director))

        return page

    def link(self, director, document=None):
        return select(id='maindoc').replaceContent(self.content(director))

    def content(self, director):
        document = Document(title='Phonon Configuration')
        form = document.form()

        job = director.clerk.getJob(self.inventory.id)

        p = Paragraph()
        p.text = [job.config]
        form.add(p)

        submit = form.submitbutton(label="Run Simulation")

        # action when form is submitted
        form.onsubmit = select(element=form).submit(
            actor   = 'phononsconfig',
            routine = 'runSimulation',
            id      = self.inventory.id
            )

        return document

    def runSimulation(self, director):

        # TODO: Run PH simulation
        # TODO: Find phonon DOS

        # Plot phonon DOS
        infile      = EXPORT_ROOT + "/content/data/ni.ph.dos.out"
        imagefile   = EXPORT_ROOT + "/html/images/plots/ni_ph_dos.png"

        from vinil.utils import plot
        plot.createPHPlot(infile, imagefile)

        return load(actor='phononsjobs', routine='link', id=self.inventory.id)


    def __init__(self, *args, **kwds):
        super(Actor, self).__init__(*args, **kwds)
        return

    def _configure(self):
        super(Actor, self)._configure()
        self.id         = self.inventory.id
        self.config     = self.inventory.config
        return

    def _init(self):
        super(Actor, self)._init()
        return

def actor():
    return Actor('phononsconfig')

__date__ = "$Aug 5, 2009 11:03:42 AM$"


