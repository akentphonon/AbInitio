#!/usr/bin/env python
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
#                               Alex Dementsov
#                      California Institute of Technology
#                        (C) 2009  All Rights Reserved
#
# {LicenseText}
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#

from ovini.components.Actor import Actor as base
from opal.content.Paragraph import Paragraph

class Actor(base):
    class Inventory(base.Inventory):
        import pyre.inventory

        config           = pyre.inventory.str(name="config", default="")

    def default(self, director):
        page = director.retrievePage('template')

        main = page._body._content._main
        document = main.document(title='Electron Configuration', id="page-document")

        job = director.clerk.getJob(1) #id = 1
        
        form = document.form(name="electronsconfig", legend="", action=director.cgihome)
        form.hidden(name='actor', value='electronsconfig')
        form.hidden(name='routine', value='runSimulation')
        p = Paragraph()
        p.text=[job.config]
        form.add(p)

        submit = form.control(name="submit", type="submit", value="Run Simulation")

        return page

    def runSimulation(self, director):
        # Run PW simulation
        from ovini.utils import pw
        infile  = "/home/dexity/exports/ovini/content/data/ni.scf.in"
        outfile = "/home/dexity/exports/ovini/output/ni.scf.out"
        pw.runPWSimulation(infile, outfile)

        # Find electron DOS
        from ovini.utils import dos
        infile  = "/home/dexity/exports/ovini/content/data/ni.scf.dos.in"
        dos.runPW_DOS(infile)

       # Plot electron DOS
        from ovini.utils import plot
        infile      = "/home/dexity/exports/ovini/output/ni.scf.dos.out"
        imagefile   = "/home/dexity/exports/ovini/html/images/ni_scf_dos.png"
        plot.createPWPlot(infile, imagefile)

        director.redirect('electronsjobs', 'default')

    def _configure(self):
        super(Actor, self)._configure()
        self.config           = self.inventory.config

        return

    def __init__(self, *args, **kwds):
        base.__init__(self, *args, **kwds)

        return

def actor():
    return Actor('template')


__date__ = "$Jul 29, 2009 11:53:51 AM$"


