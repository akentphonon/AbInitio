TODO list:

- Implement jobmanager as pyre application
- Support two styles of config files: pyre style (.pml) and ConfigParser module
- Add support of curses (see beostatus)
- Write 'man jm' for fun
	See: http://www.fnal.gov/docs/products/ups/ReferenceManual/html/manpages.html

- Write parser for torque output (e.g. qstat)
- Figure out how to properly add packages remotely with 'environmental module'

Usage:
$ jm.py --config=ni.scf.in --action=submit

	--scriptname	- Name of the script that will be executed on remote server (default: run.sh)
	--config	- Configuration file (e.g. --config=ni.scf.in)
	--config-type	- Type of config file (options: pyre, configparser (default)) (e.g. --config-type=configparser)
	--action	- Action to be performed (option: submit (default), status )
	--servername	- Server name
	--serverport	- Server port
	--serverip	- Server IP (In case if server is not available by name)

Detailed list:
- Merge Scheduler.py and torque.py

	
