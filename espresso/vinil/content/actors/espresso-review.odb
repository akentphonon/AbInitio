#!/usr/bin/env python
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
#                               Alex Dementsov
#                      California Institute of Technology
#                        (C) 2009  All Rights Reserved
#
# {LicenseText}
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#

config = """ &control
    calculation='scf'
    restart_mode='from_scratch',
    tprnfor = .true.
    prefix='ni',
    pseudo_dir = '',
    outdir=''
 /
 &system
    ibrav=2,
    celldm(1) =6.65,
    nat=  1,
    ntyp= 1,
    nspin=2,
    starting_magnetization(1)=0.5,
    degauss=0.02,
    smearing='gauss',
    occupations='smearing',
    ecutwfc =27.0
    ecutrho =300.0
 /
 &electrons
    conv_thr =  1.0d-8
    mixing_beta = 0.7
 /
ATOMIC_SPECIES
 Ni  26.98  Ni.pbe-nd-rrkjus.UPF
ATOMIC_POSITIONS
 Ni 0.00 0.00 0.00
K_POINTS AUTOMATIC
4 4 4 1 1 1
"""

from luban.content import select
from luban.content.Paragraph import Paragraph
from luban.content.Document import Document
from luban.content.HtmlDocument import HtmlDocument
from luban.content import load
from luban.content.Link import Link
from luban.content.Splitter import Splitter
from luban.content.FormSelectorField import FormSelectorField
from luban.content.Form import Form

from vinil.components.Actor import Actor as base
class Actor(base):

    class Inventory(base.Inventory):
        import pyre.inventory
        id      = pyre.inventory.str('id')

    def content(self, director):
        from vinil.utils.simulationsteps import SimulationSteps
        from vinil.utils.stepper import Stepper
        splitter    = Splitter(orientation='vertical', id="step-splitter")

        simsteps    = SimulationSteps(current=3)
        s_steps     = simsteps.getSteps()
        splitter.add(s_steps)

        s_content   = splitter.section()
        d           = Document(Class="step-content")
        text ="""Here you can edit configuration files that will be used in
        simulations directly."""
        d.add(Paragraph(text=text))

        #d_form      = Document(Class="step-content-form")

        form        = Form(id="form-vinil")
        form.textarea(label='Configuration file', value=config, Class="config-textarea")
        d.add(form)
        #d.add(d_form)

        s_content.add(d)

        linklist    = (("espresso-parameters", "link"), ("espresso-run", "link"))
        stepper     = Stepper(linklist)
        s_stepper   = stepper.getStepper()
        splitter.add(s_stepper)

        return splitter

    def __init__(self, *args, **kwds):
        super(Actor, self).__init__(*args, **kwds)
        self.pathlist = [("Home","greet","link"),
                         ("Simulations", "simulations", "link"),
                         ("Quantum Espresso", "espresso", "link"),
                         ("Review Configuration", None, None)
                         ]

        return


    def _configure(self):
        super(Actor, self)._configure()
        self.id = self.inventory.id
        return


    def _init(self):
        super(Actor, self)._init()
        return

def actor():
    return Actor('espresso-review')


__date__ = "$Sep 29, 2009 7:49:10 PM$"


