#!/usr/bin/env python
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
#                               Alex Dementsov
#                      California Institute of Technology
#                        (C) 2009  All Rights Reserved
#
# {LicenseText}
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#

from luban.content import select
from luban.content.Paragraph import Paragraph
from luban.content.Document import Document
from luban.content.HtmlDocument import HtmlDocument
from luban.content import load
from luban.content.Link import Link
from luban.content.Form import Form
from luban.content.Button import Button

from vinil.components.Actor import Actor as base
class Actor(base):

    class Inventory(base.Inventory):
        import pyre.inventory
        id      = pyre.inventory.str('id', default='')      # Simulation Id



    def content(self, director):
        sim     = director.clerk.getSimulations(id=self.id)

        document = Document(title='Delete Simulation: %s' % sim.sname)
        document.add(Paragraph(text="Are you sure you want to delete the simulation?"))

        form        = Form(id="form-vinil")
        submit      = form.submitbutton(label="Delete")
        form.onsubmit   = select(element=form).submit(actor = 'espresso-sim-delete', routine = 'deleteRecord', id=sim.id)

        # TODO: "Cancel" button looks UGLY
        cancel      = Button(label="Cancel")
        cancel.onclick = load(actor = 'espresso', routine = 'link')
        form.add(cancel)

        document.add(form)

        return document

    def deleteRecord(self, director):
        sim             = director.clerk.getSimulations(id=self.id)
        config          = director.clerk.getConfigurations(where="simulationId='%s'" % self.id)

        if sim:
            sim.deleteRecord(director)

        if config:
            config[0].deleteRecord(director)

        return load(actor='espresso', routine='link')  # Redirection to the page


    def pathlist(self, director):
        sim     = director.clerk.getSimulations(id=self.id)
        self.pathlist = [("Home","greet","link"),
                         ("Simulations", "simulations", "link"),
                         ("Quantum Espresso", "espresso", "link"),
                         (sim.sname, "espresso-sim-view", "link", self.id),
                         ("Delete", None, None)]

        return self.pathlist


    def __init__(self, *args, **kwds):
        super(Actor, self).__init__(*args, **kwds)

        return


    def _configure(self):
        super(Actor, self)._configure()
        self.id = self.inventory.id
        return


    def _init(self):
        super(Actor, self)._init()
        return

def actor():
    return Actor('espresso-sim-delete')

__date__ = "$Nov 2, 2009 3:19:17 PM$"


