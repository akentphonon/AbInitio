#!/usr/bin/env python
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
#                               Alex Dementsov
#                      California Institute of Technology
#                        (C) 2009  All Rights Reserved
#
# {LicenseText}
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#

from luban.content import select
from luban.content.Paragraph import Paragraph
from luban.content.Document import Document
from luban.content.HtmlDocument import HtmlDocument
from luban.content import load
from luban.content.Link import Link

from vinil.components.Actor import Actor as base
class Actor(base):

    class Inventory(base.Inventory):
        import pyre.inventory
        id      = pyre.inventory.str('id')

    def content(self, director):
        document = Document(title='Quantum Espresso')

        text = '<img src="images/icons/newsimulation.png" id="create-new-simulation"/>'
        d = HtmlDocument(text=text, onclick=load(actor='espresso', routine='createNew'))
        document.add(d)

        text = "or use existing simulation from Favorites:"
        p = Paragraph(text=text, id="text-or")
        document.add(p)

        """
        text = 
        p = Paragraph(text=text, id="test-after-or")
        document.add(p)
        """

        document.add(table())

        return document


    def __init__(self, *args, **kwds):
        super(Actor, self).__init__(*args, **kwds)
        self.list = [("Home","greet","link"),
                     ("Simulations", "simulations", "link"),
                     ("Quantum Espresso", None, None)]

        return


    def _configure(self):
        super(Actor, self)._configure()
        self.id = self.inventory.id
        return


    def _init(self):
        super(Actor, self)._init()
        return

def actor():
    return Actor('espresso')

def table():
    from luban.content.table import Table, Model, View

    # create a model class
    class model(Model):
        name        = Model.descriptors.link(name='name')
        type        = Model.descriptors.str(name='type')
        description = Model.descriptors.str(name='description')
        configs     = Model.descriptors.str(name='configs') 
        created     = Model.descriptors.str(name='created')
        edit        = Model.descriptors.link(name='edit')
        remove      = Model.descriptors.link(name='remove')
        use         = Model.descriptors.link(name='use')

    # create a view
    view = View( columns =  [ View.Column(label='Name', measure='name'),
                              View.Column(label='Type', measure='type'),
                              View.Column(label='Description', measure='description'),
                              View.Column(label='Formula', measure='configs'), #?
                              View.Column(label='Created', measure='created'),
                              View.Column(label=' ', measure='edit'),
                              View.Column(label=' ', measure='remove'),
                              View.Column(label=' ', measure='use'),]
                              )
    # Populate the data list.
    names   = ['MgB2_SP', 'MgB2_E', 'MgB2_MP']
    columns = [['Single-Phonon', 'Single-Phonon simualtion', 'MgB2', '25-09-2009'],
               ['Electron', 'Electron simualtion', 'MgB2', '26-09-2009'],
               ['Multy-Phonon', 'Multy-Phonon simualtion', 'MgB2', '27-09-2009'],
                ]

    def name(i):
        link = Link(label=names[i], onclick = load(actor='greet', routine='link'))
        return link

    def edit():
        link = Link(label="Edit", onclick = load(actor='greet', routine='link'))
        return link

    def remove():
        link = Link(label="Remove", onclick = load(actor='greet', routine='link'))
        return link

    def use():
        link = Link(label="Use", onclick = load(actor='greet', routine='link'))
        return link

    data    = []
    for i in range(len(names)):
        n           = [name(i)]
        data.append(n)
        data[i]     += columns[i]
        data[i]     += [edit()]
        data[i]     += [remove()]
        data[i]     += [use()]

    # create the table
    table = Table(model=model, data=data, view=view)

    return table


__date__ = "$Sep 26, 2009 1:59:59 PM$"


