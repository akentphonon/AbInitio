#!/usr/bin/env python
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
#                               Alex Dementsov
#                      California Institute of Technology
#                        (C) 2009  All Rights Reserved
#
# {LicenseText}
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#

from luban.content import select
from luban.content.Paragraph import Paragraph
from luban.content.Document import Document
from luban.content.HtmlDocument import HtmlDocument
from luban.content import load
from luban.content.Link import Link
from luban.content.Splitter import Splitter
from luban.content.FormSelectorField import FormSelectorField

from vinil.components.Actor import Actor as base
class Actor(base):

    class Inventory(base.Inventory):
        import pyre.inventory
        id      = pyre.inventory.str('id')

    def content(self, director):
        splitter    = Splitter(orientation='vertical', id="step-splitter")
        s_steps     = splitter.section()
        d           = Document(Class="step-item")
        d.add(Paragraph(text="1", Class="step-number" ))
        d.add(Paragraph(text="Set Material", Class="step-text"))
        s_steps.add(d)

        d           = Document(Class="step-item")
        d.add(Paragraph(text="2", Class="step-number-disabled"))
        d.add(Paragraph(text="Set Simulation Parameters", Class="step-text-disabled"))
        s_steps.add(d)

        d           = Document(Class="step-item")
        d.add(Paragraph(text="3", Class="step-number-disabled"))
        d.add(Paragraph(text="Review Configuration", Class="step-text-disabled"))
        s_steps.add(d)

        d           = Document(Class="step-item")
        d.add(Paragraph(text="4", Class="step-number-disabled"))
        d.add(Paragraph(text="Add to Jobs Queue", Class="step-text-disabled"))
        s_steps.add(d)

        s_content   = splitter.section()
        s_direction = splitter.section()

        return splitter

    def __init__(self, *args, **kwds):
        super(Actor, self).__init__(*args, **kwds)
        self.pathlist = [("Home","greet","link"),
                         ("Simulations", "simulations", "link"),
                         ("Quantum Espresso", "espresso", "link"),
                         ("Set Material", None, None)
                         ]

        return


    def _configure(self):
        super(Actor, self)._configure()
        self.id = self.inventory.id
        return


    def _init(self):
        super(Actor, self)._init()
        return

def actor():
    return Actor('espresso-material')


__date__ = "$Sep 29, 2009 7:47:51 PM$"


