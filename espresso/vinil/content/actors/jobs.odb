#!/usr/bin/env python
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
#                               Alex Dementsov
#                      California Institute of Technology
#                        (C) 2009  All Rights Reserved
#
# {LicenseText}
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#

from luban.content import select
from luban.content.Paragraph import Paragraph
from luban.content.Document import Document
from luban.content import load
from luban.content.Link import Link

from vinil.components.Actor import Actor as base
class Actor(base):

    class Inventory(base.Inventory):
        import pyre.inventory
        id      = pyre.inventory.str('id')


    def content(self, director):
        document = Document(title='Jobs')
        p = Paragraph()
        p.text = ["""Jobs? """]
        document.add(p)

        return document


    # Running jobs
    def linkRunning(self, director, document=None):
        actions = []
        actions.append(select(id='maindoc').replaceContent(self.contentRunning(director)))
        actions.append(select(id='path-content').replaceContent(self.pathRunning()))

        return actions

    def contentRunning(self, director):
        document = Document(title='Running Jobs')
        p = Paragraph()
        p.text = ["""Table of running jobs """]
        document.add(p)

        return document

    def pathRunning(self):
        list = [["Home","greet","link"],
                ["Jobs", "jobs", "link"],
                ["Running", None, None]]

        from vinil.utils.pathbuilder import PathBuilder
        pb = PathBuilder(list)
        return pb.buildPath()

    # Finished jobs
    def linkFinished(self, director, document=None):
        actions = []
        actions.append(select(id='maindoc').replaceContent(self.contentFinished(director)))
        actions.append(select(id='path-content').replaceContent(self.pathFinished()))

        return actions

    def contentFinished(self, director):
        document = Document(title='Finished Jobs')
        p = Paragraph()
        p.text = ["""Table of finished jobs """]
        document.add(p)

        return document

    def pathFinished(self):
        list = [["Home","greet","link"],
                ["Jobs", "jobs", "link"],
                ["Finished", None, None]]

        from vinil.utils.pathbuilder import PathBuilder
        pb = PathBuilder(list)
        return pb.buildPath()

    # Failed jobs
    def linkFailed(self, director, document=None):
        actions = []
        actions.append(select(id='maindoc').replaceContent(self.contentFailed(director)))
        actions.append(select(id='path-content').replaceContent(self.pathFailed()))

        return actions

    def contentFailed(self, director):
        document = Document(title='Failed Jobs')
        p = Paragraph()
        p.text = ["""Table of failed jobs """]
        document.add(p)

        return document

    def pathFailed(self):
        list = [["Home","greet","link"],
                ["Jobs", "jobs", "link"],
                ["Failed", None, None]]

        from vinil.utils.pathbuilder import PathBuilder
        pb = PathBuilder(list)
        return pb.buildPath()


    def __init__(self, *args, **kwds):
        super(Actor, self).__init__(*args, **kwds)
        self.pathlist = [("Home","greet","link"),
                         ("Jobs", None, None)
                         ]

        return


    def _configure(self):
        super(Actor, self)._configure()
        self.id = self.inventory.id
        return


    def _init(self):
        super(Actor, self)._init()
        return

def actor():
    return Actor('jobs')


__date__ = "$Sep 26, 2009 1:59:59 PM$"


