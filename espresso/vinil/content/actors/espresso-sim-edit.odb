#!/usr/bin/env python
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
#                               Alex Dementsov
#                      California Institute of Technology
#                        (C) 2009  All Rights Reserved
#
# {LicenseText}
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#

from luban.content import select
from luban.content.Paragraph import Paragraph
from luban.content.Document import Document
from luban.content.HtmlDocument import HtmlDocument
from luban.content import load
from luban.content.Link import Link
from luban.content.Form import Form

from vinil.components.Actor import Actor as base
class Actor(base):

    class Inventory(base.Inventory):
        import pyre.inventory
        id      = pyre.inventory.str('id', default='')      # Simulation Id

    def content(self, director):
        sim     = director.clerk.getSimulations(id=self.id)
        config  = director.clerk.getConfigurations(where="simulationId='%s'" % self.id)
        if config:
            filename    = config[0].filename
            configtext  = config[0].text
        else:
            filename    = ""
            configtext  = ""

        document = Document(title='Edit Simulation: %s' % sim.sname, Class="step-content")  # Class="step-content-form")

        packages    = ["Quantum Espresso"]  #, "VASP", "GULP"]

        form        = Form(id="form-vinil")
        form.text(label='Simulation Name', value=sim.sname)
        form.selector(label='Package', entries=enumerate(packages))
        form.text(label='Type', value=sim.type)
        form.text(label='Description', value=sim.description)   # Make as textarea
        form.text(label='Formula', value=sim.formula)
        form.text(label='File Name', value=filename)
        form.textarea(label='Config Text', value=configtext)
        submit      = form.submitbutton(label="Save changes")
        form.onsubmit   = select(element=form).submit(actor = 'espresso', routine = 'linkSim', id=sim.id)
        document.add(form)

        return document

    # Reimplemented from class Actor (to use director)
    def link(self, director):
        sim     = director.clerk.getSimulations(id=self.id)
        self.pathlist = [("Home","greet","link"),
                         ("Simulations", "simulations", "link"),
                         ("Quantum Espresso", "espresso", "link"),
                         (sim.sname, "espresso-sim-view", "link", self.id),
                         ("Edit", None, None)]

        return self.getActions(self.content(director), self.pathlist)


    def __init__(self, *args, **kwds):
        super(Actor, self).__init__(*args, **kwds)

        return


    def _configure(self):
        super(Actor, self)._configure()
        self.id = self.inventory.id
        return


    def _init(self):
        super(Actor, self)._init()
        return

def actor():
    return Actor('espresso-sim-edit')

__date__ = "$Nov 2, 2009 3:15:49 PM$"


