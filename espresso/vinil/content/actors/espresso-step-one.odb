#!/usr/bin/env python
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
#                               Alex Dementsov
#                      California Institute of Technology
#                        (C) 2009  All Rights Reserved
#
# {LicenseText}
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#


from vinil.utils.const import STEPS

from luban.content import select
from luban.content.Paragraph import Paragraph
from luban.content.Document import Document
from luban.content.HtmlDocument import HtmlDocument
from luban.content import load
from luban.content.Link import Link
from luban.content.Splitter import Splitter
from luban.content.FormSelectorField import FormSelectorField
from luban.content.FormRadioBox import FormRadioBox
from luban.content.Form import Form

from vinil.components.Actor import Actor as base
class Actor(base):

    class Inventory(base.Inventory):
        import pyre.inventory
        id      = pyre.inventory.str('id')

    def content(self, director):
        from vinil.utils.simulationsteps import SimulationSteps
        from vinil.utils.stepper import Stepper
        splitter    = Splitter(orientation='vertical', id="step-splitter")

        simsteps    = SimulationSteps(current=1)
        s_steps     = simsteps.getSteps()
        splitter.add(s_steps)

        s_content   = splitter.section()

        d           = Document(Class="step-content")
#        text ="""Here you can set parameters related to your simulation. This can
#        general parameters related to your simularion such as convergence and
#        iterations as well as architecture related such as the name of cluster the
#        simulation will run on or number of processes"""
#        d_form.add(Paragraph(text="First choose the type of the simulation from available options:"))

        text    = """Please choose the type of simulation from available options:"""
        d.add(Paragraph(text=text))

        d_form      = Document(Class="step-content-form")

        options = [ "Total Energy",
                    "Electron DOS",
                    "Electron Dispersion (Not Implemented Yet)",
                    "Geometry Optimization (Not Implemented Yet)",
                    "Single-Phonon (Not Implemented Yet)",
                    "Multi-Phonon DOS (Not Implemented Yet)",
                    "Multi-Phonon Dispersion (Not Implemented Yet)"]

        d_form.add(FormRadioBox(entries=enumerate(options)) )

        d.add(d_form)

        s_content.add(d)

        linklist    = (("espresso", "link"), ("espresso-step-two", "link"))
        stepper     = Stepper(linklist)
        s_stepper   = stepper.getStepper()
        splitter.add(s_stepper)

        return splitter

    def __init__(self, *args, **kwds):
        super(Actor, self).__init__(*args, **kwds)
        self.pathlist = [("Home","greet","link"),
                         ("Simulations", "simulations", "link"),
                         ("Quantum Espresso", "espresso", "link"),
                         (STEPS[0], None, None)
                         ]

        return


    def _configure(self):
        super(Actor, self)._configure()
        self.id = self.inventory.id
        return


    def _init(self):
        super(Actor, self)._init()
        return

def actor():
    return Actor('espresso-step-two')

__date__ = "$Sep 29, 2009 7:47:51 PM$"




